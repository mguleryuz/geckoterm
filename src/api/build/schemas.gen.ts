// This file is auto-generated by @hey-api/openapi-ts

export const errors_objectSchema = {
  type: 'object',
  properties: {
    errors: {
      type: 'array',
      items: {
        type: 'object',
        properties: {
          status: {
            type: 'string',
          },
          title: {
            type: 'string',
          },
        },
      },
    },
  },
} as const

export const relationshipsSchema = {
  type: 'object',
  additional_properties: {
    type: 'object',
    properties: {
      data: {
        type: 'object',
        properties: {
          id: {
            type: 'string',
          },
          type: {
            type: 'string',
          },
        },
      },
    },
  },
} as const

export const simple_token_priceSchema = {
  type: 'object',
  properties: {
    id: {
      type: 'string',
    },
    type: {
      type: 'string',
    },
    attributes: {
      properties: {
        token_prices: {
          type: 'object',
          example: {
            '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48': '0.996586003049284',
            '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2': '1822.49988301345',
          },
        },
      },
    },
  },
} as const

export const tokenSchema = {
  type: 'object',
  properties: {
    id: {
      type: 'string',
    },
    type: {
      type: 'string',
    },
    attributes: {
      properties: {
        name: {
          type: 'string',
        },
        address: {
          type: 'string',
        },
        symbol: {
          type: 'string',
        },
        decimals: {
          type: 'integer',
        },
        total_supply: {
          type: 'string',
          nullable: true,
        },
        coingecko_coin_id: {
          type: 'string',
          nullable: true,
        },
        price_usd: {
          type: 'string',
          nullable: true,
        },
        fdv_usd: {
          type: 'string',
          nullable: true,
        },
        total_reserve_in_usd: {
          type: 'string',
          nullable: true,
        },
        volume_usd: {
          type: 'object',
          nullable: true,
        },
        market_cap_usd: {
          type: 'string',
          nullable: true,
        },
      },
    },
    relationships: {
      $ref: '#/components/schemas/relationships',
    },
  },
} as const

export const token_infoSchema = {
  type: 'object',
  properties: {
    id: {
      type: 'string',
    },
    type: {
      type: 'string',
    },
    attributes: {
      properties: {
        name: {
          type: 'string',
        },
        address: {
          type: 'string',
        },
        symbol: {
          type: 'string',
        },
        decimals: {
          type: 'integer',
        },
        coingecko_coin_id: {
          type: 'string',
          nullable: true,
        },
        image_url: {
          type: 'string',
          nullable: true,
        },
        websites: {
          type: 'array',
          items: {
            type: 'string',
          },
        },
        description: {
          type: 'string',
          nullable: true,
        },
        discord_url: {
          type: 'string',
          nullable: true,
        },
        telegram_handle: {
          type: 'string',
          nullable: true,
        },
        twitter_handle: {
          type: 'string',
          nullable: true,
        },
        gt_score: {
          type: 'number',
          format: 'float',
          nullable: true,
        },
        metadata_updated_at: {
          type: 'string',
          format: 'datetime',
          nullable: true,
        },
      },
      required: [
        'name',
        'address',
        'symbol',
        'coingecko_coin_id',
        'image_url',
        'websites',
        'description',
        'discord_url',
        'telegram_handle',
        'twitter_handle',
        'gt_score',
      ],
    },
    relationships: {
      $ref: '#/components/schemas/relationships',
    },
  },
} as const

export const poolSchema = {
  type: 'object',
  properties: {
    id: {
      type: 'string',
    },
    type: {
      type: 'string',
    },
    attributes: {
      properties: {
        name: {
          type: 'string',
        },
        address: {
          type: 'string',
        },
        base_token_price_usd: {
          type: 'string',
          nullable: true,
        },
        quote_token_price_usd: {
          type: 'string',
          nullable: true,
        },
        base_token_price_native_currency: {
          type: 'string',
          nullable: true,
        },
        quote_token_price_native_currency: {
          type: 'string',
          nullable: true,
        },
        base_token_price_quote_token: {
          type: 'string',
          nullable: true,
        },
        quote_token_price_base_token: {
          type: 'string',
          nullable: true,
        },
        pool_created_at: {
          type: 'string',
          format: 'datetime',
          nullable: true,
        },
        reserve_in_usd: {
          type: 'string',
          nullable: true,
        },
        fdv_usd: {
          type: 'string',
          nullable: true,
        },
        market_cap_usd: {
          type: 'string',
          nullable: true,
        },
        price_change_percentage: {
          type: 'object',
        },
        transactions: {
          type: 'object',
        },
        volume_usd: {
          type: 'object',
        },
      },
    },
    relationships: {
      $ref: '#/components/schemas/relationships',
    },
  },
} as const

export const ohlcvSchema = {
  type: 'object',
  properties: {
    data: {
      type: 'object',
      properties: {
        id: {
          type: 'string',
        },
        type: {
          type: 'string',
        },
        attributes: {
          type: 'object',
          properties: {
            ohlcv_list: {
              type: 'array',
              items: {
                type: 'array',
                items: {
                  type: 'number',
                },
                min_items: 6,
                max_items: 6,
                example: [
                  1708498800, 2955.65173795683, 2955.65173795683,
                  2933.98026793936, 2934.24491263724, 131664.76418553386,
                ],
                description:
                  'Each array contains unix timestamp, open, high, low, close and volume in USD.',
              },
            },
          },
        },
      },
    },
    meta: {
      type: 'object',
      properties: {
        base: {
          $ref: '#/components/schemas/ohlcv_token',
        },
        quote: {
          $ref: '#/components/schemas/ohlcv_token',
        },
      },
      example: {
        base: {
          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',
          name: 'Wrapped Ether',
          symbol: 'WETH',
          coingecko_coin_id: 'weth',
        },
        quote: {
          address: '0x6b175474e89094c44da98b954eedeac495271d0f',
          name: 'Dai Stablecoin',
          symbol: 'DAI',
          coingecko_coin_id: 'dai',
        },
      },
    },
  },
} as const

export const ohlcv_tokenSchema = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
    },
    symbol: {
      type: 'string',
    },
    address: {
      type: 'string',
    },
    coingecko_coin_id: {
      type: 'string',
      nullable: true,
    },
  },
} as const

export const tradeSchema = {
  type: 'object',
  properties: {
    id: {
      type: 'string',
    },
    type: {
      type: 'string',
    },
    attributes: {
      properties: {
        block_number: {
          type: 'integer',
        },
        block_timestamp: {
          type: 'string',
          format: 'datetime',
        },
        tx_hash: {
          type: 'string',
        },
        tx_from_address: {
          type: 'string',
        },
        from_token_amount: {
          type: 'string',
        },
        to_token_amount: {
          type: 'string',
        },
        price_from_in_currency_token: {
          type: 'string',
        },
        price_to_in_currency_token: {
          type: 'string',
        },
        price_from_in_usd: {
          type: 'string',
        },
        price_to_in_usd: {
          type: 'string',
        },
        kind: {
          type: 'string',
        },
        volume_in_usd: {
          type: 'string',
        },
        from_token_address: {
          type: 'string',
        },
        to_token_address: {
          type: 'string',
        },
      },
    },
  },
} as const
