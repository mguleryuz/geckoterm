// This file is auto-generated by @hey-api/openapi-ts

export type errors_object = {
  errors?: Array<{
    status?: string
    title?: string
  }>
}

export type ohlcv = {
  data?: {
    id?: string
    type?: string
    attributes?: {
      ohlcv_list?: Array<Array<number>>
    }
  }
  meta?: {
    base?: ohlcv_token
    quote?: ohlcv_token
  }
}

export type ohlcv_token = {
  name?: string
  symbol?: string
  address?: string
  coingecko_coin_id?: string | null
}

export type pool = {
  id?: string
  type?: string
  attributes?: {
    name?: string
    address?: string
    base_token_price_usd?: string | null
    quote_token_price_usd?: string | null
    base_token_price_native_currency?: string | null
    quote_token_price_native_currency?: string | null
    base_token_price_quote_token?: string | null
    quote_token_price_base_token?: string | null
    pool_created_at?: string | null
    reserve_in_usd?: string | null
    fdv_usd?: string | null
    market_cap_usd?: string | null
    price_change_percentage?: {
      [key: string]: unknown
    }
    transactions?: {
      [key: string]: unknown
    }
    volume_usd?: {
      [key: string]: unknown
    }
  }
  relationships?: relationships
}

export type relationships = {
  [key: string]: unknown
}

export type simple_token_price = {
  id?: string
  type?: string
  attributes?: {
    token_prices?: {
      [key: string]: unknown
    }
  }
}

export type token = {
  id?: string
  type?: string
  attributes?: {
    name?: string
    address?: string
    symbol?: string
    decimals?: number
    total_supply?: string | null
    coingecko_coin_id?: string | null
    price_usd?: string | null
    fdv_usd?: string | null
    total_reserve_in_usd?: string | null
    volume_usd?: {
      [key: string]: unknown
    } | null
    market_cap_usd?: string | null
  }
  relationships?: relationships
}

export type token_info = {
  id?: string
  type?: string
  attributes?: {
    name: string
    address: string
    symbol: string
    decimals?: number
    coingecko_coin_id: string | null
    image_url: string | null
    websites: Array<string>
    description: string | null
    discord_url: string | null
    telegram_handle: string | null
    twitter_handle: string | null
    categories?: Array<string> | null
    gt_category_ids?: Array<string> | null
    gt_score: number | null
    metadata_updated_at?: string | null
  }
  relationships?: relationships
}

export type trade = {
  id?: string
  type?: string
  attributes?: {
    block_number?: number
    block_timestamp?: string
    tx_hash?: string
    tx_from_address?: string
    from_token_amount?: string
    to_token_amount?: string
    price_from_in_currency_token?: string
    price_to_in_currency_token?: string
    price_from_in_usd?: string
    price_to_in_usd?: string
    kind?: string
    volume_in_usd?: string
    from_token_address?: string
    to_token_address?: string
  }
}

export type GetNetworksByNetworkPoolsByPoolAddressOhlcvByTimeframeData = {
  path: {
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
    /**
     * pool address<br><br><b>Example:</b> 0x60594a405d53811d3bc4766596efd80fd545a270<br>**Note: Pools with more than 2 tokens are not yet supported for this endpoint.**
     */
    pool_address: string
    /**
     * timeframe<br><br><b>Available values:</b> day, hour, minute<br><b>Example:</b> day
     */
    timeframe: string
  }
  query?: {
    /**
     * time period to aggregate for each ohlcv (eg. `/minute?aggregate=15` for 15m ohlcv)<br><br><b>Available values (day):</b> 1<br><br><b>Available values (hour):</b> 1, 4, 12<br><br><b>Available values (minute):</b> 1, 5, 15<br><b>Default:</b> 1
     */
    aggregate?: string
    /**
     * return ohlcv data before this timestamp (integer seconds since epoch)<br><b>Example:</b> 1679414400
     */
    before_timestamp?: string
    /**
     * return ohlcv in USD or quote token (default: usd)<br><br><b>Available values:</b> usd, token
     */
    currency?: string
    /**
     * limit number of ohlcv results to return (default: 100, max: 1000)<br><b>Example:</b> 100
     */
    limit?: string
    /**
     * return ohlcv for base or quote token; use this to invert the chart. (default: base)<br><br><b>Available values:</b> base, quote, or a token address
     */
    token?: string
  }
}

export type GetNetworksByNetworkPoolsByPoolAddressOhlcvByTimeframeResponse =
  ohlcv

export type GetNetworksByNetworkPoolsByPoolAddressOhlcvByTimeframeError =
  errors_object

export type GetNetworksByNetworkDexesData = {
  path: {
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
  query?: {
    /**
     * Page through results
     */
    page?: number
  }
}

export type GetNetworksByNetworkDexesResponse = {
  data?: Array<{
    id?: string
    type?: string
    attributes?: {
      name?: string
    }
  }>
}

export type GetNetworksByNetworkDexesError = unknown

export type GetNetworksData = {
  query?: {
    /**
     * Page through results
     */
    page?: number
  }
}

export type GetNetworksResponse = {
  data?: Array<{
    id?: string
    type?: string
    attributes?: {
      name?: string
    }
  }>
}

export type GetNetworksError = unknown

export type GetNetworksTrendingPoolsData = {
  query?: {
    /**
     * Duration to sort trending list by<br><br><b>Available resources:</b> 5m, 1h, 6h, 24h<br><b>Example:</b> 5m
     */
    duration?: string
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> base_token, quote_token, dex, network<br><b>Example:</b> base_token,quote_token
     */
    include?: string
    /**
     * Page through results (maximum: 10)
     */
    page?: number
  }
}

export type GetNetworksTrendingPoolsResponse = {
  data?: Array<pool>
}

export type GetNetworksTrendingPoolsError = errors_object

export type GetNetworksByNetworkTrendingPoolsData = {
  path: {
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
  query?: {
    /**
     * Duration to sort trending list by<br><br><b>Available resources:</b> 5m, 1h, 6h, 24h<br><b>Example:</b> 5m
     */
    duration?: string
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> base_token, quote_token, dex<br><b>Example:</b> base_token,quote_token
     */
    include?: string
    /**
     * Page through results (maximum: 10)
     */
    page?: number
  }
}

export type GetNetworksByNetworkTrendingPoolsResponse = {
  data?: Array<pool>
}

export type GetNetworksByNetworkTrendingPoolsError = errors_object

export type GetNetworksByNetworkPoolsByAddressData = {
  path: {
    /**
     * pool address<br><br><b>Example:</b> 0x60594a405d53811d3bc4766596efd80fd545a270
     */
    address: string
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> base_token, quote_token, dex<br><b>Example:</b> base_token,quote_token
     */
    include?: string
  }
}

export type GetNetworksByNetworkPoolsByAddressResponse = pool

export type GetNetworksByNetworkPoolsByAddressError = errors_object

export type GetNetworksByNetworkPoolsMultiByAddressesData = {
  path: {
    /**
     * comma-separated list of pool addresses (up to 30 addresses)<br>addresses not found in the GeckoTerminal database will be ignored<br><br><b>Example:</b> 0x60594a405d53811d3bc4766596efd80fd545a270,0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640
     */
    addresses: string
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> base_token, quote_token, dex<br><b>Example:</b> base_token,quote_token
     */
    include?: string
  }
}

export type GetNetworksByNetworkPoolsMultiByAddressesResponse = {
  data?: Array<pool>
  included?: unknown[]
}

export type GetNetworksByNetworkPoolsMultiByAddressesError = errors_object

export type GetNetworksByNetworkPoolsData = {
  path: {
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> base_token, quote_token, dex<br><b>Example:</b> base_token,quote_token
     */
    include?: string
    /**
     * Page through results (maximum: 10)
     */
    page?: number
    /**
     * Sort pools by one of the following options<br><br><b>Available sort options:</b> h24_tx_count_desc, h24_volume_usd_desc<br><br><b>Default:</b> h24_tx_count_desc
     */
    sort?: string
  }
}

export type GetNetworksByNetworkPoolsResponse = {
  data?: Array<pool>
}

export type GetNetworksByNetworkPoolsError = errors_object

export type GetNetworksByNetworkDexesByDexPoolsData = {
  path: {
    /**
     * dex id from /networks/{network}/dexes list<br><br><b>Example:</b> sushiswap
     */
    dex: string
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> base_token, quote_token, dex<br><b>Example:</b> base_token,quote_token
     */
    include?: string
    /**
     * Page through results (maximum: 10)
     */
    page?: number
    /**
     * Sort pools by one of the following options<br><br><b>Available sort options:</b> h24_tx_count_desc, h24_volume_usd_desc<br><br><b>Default:</b> h24_tx_count_desc
     */
    sort?: string
  }
}

export type GetNetworksByNetworkDexesByDexPoolsResponse = {
  data?: Array<pool>
}

export type GetNetworksByNetworkDexesByDexPoolsError = errors_object

export type GetNetworksByNetworkTokensByTokenAddressPoolsData = {
  path: {
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
    /**
     * address of token<br><br><b>Example:</b> 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48
     */
    token_address: string
  }
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> base_token, quote_token, dex<br><b>Example:</b> base_token,quote_token
     */
    include?: string
    /**
     * Page through results (maximum: 10)
     */
    page?: number
    /**
     * Sort pools by one of the following options<br><br><b>Available sort options:</b> h24_volume_usd_liquidity_desc, h24_tx_count_desc, h24_volume_usd_desc<br><br><b>Default:</b> h24_volume_usd_liquidity_desc
     */
    sort?: string
  }
}

export type GetNetworksByNetworkTokensByTokenAddressPoolsResponse = {
  data?: Array<pool>
}

export type GetNetworksByNetworkTokensByTokenAddressPoolsError = errors_object

export type GetNetworksByNetworkNewPoolsData = {
  path: {
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> base_token, quote_token, dex<br><b>Example:</b> base_token,quote_token
     */
    include?: string
    /**
     * Page through results (maximum: 10)
     */
    page?: number
  }
}

export type GetNetworksByNetworkNewPoolsResponse = {
  data?: Array<pool>
}

export type GetNetworksByNetworkNewPoolsError = errors_object

export type GetNetworksNewPoolsData = {
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> base_token, quote_token, dex, network<br><b>Example:</b> base_token,quote_token
     */
    include?: string
    /**
     * Page through results (maximum: 10)
     */
    page?: number
  }
}

export type GetNetworksNewPoolsResponse = {
  data?: Array<pool>
}

export type GetNetworksNewPoolsError = unknown

export type GetSearchPoolsData = {
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> base_token, quote_token, dex<br><b>Example:</b> base_token,quote_token
     */
    include?: string
    /**
     * _(optional)_ network id from /networks list<br><br><b>Example:</b> eth
     */
    network?: string
    /**
     * Page through results (maximum: 10)
     */
    page?: number
    /**
     * Search query: can be pool address, token address, or token symbol.<br>Returns matching pools.<br><br><b>Example:</b> ETH
     */
    query?: string
  }
}

export type GetSearchPoolsResponse = {
  data?: Array<pool>
  included?: unknown[]
}

export type GetSearchPoolsError = unknown

export type GetNetworksByNetworkPoolsByPoolAddressTradesData = {
  path: {
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
    /**
     * pool address<br><br><b>Example:</b> 0x60594a405d53811d3bc4766596efd80fd545a270
     */
    pool_address: string
  }
  query?: {
    /**
     * return trades with volume greater than this value in USD (default: 0)<br><b>Example:</b> 100000
     */
    trade_volume_in_usd_greater_than?: number
  }
}

export type GetNetworksByNetworkPoolsByPoolAddressTradesResponse = {
  data?: Array<trade>
}

export type GetNetworksByNetworkPoolsByPoolAddressTradesError = errors_object

export type GetNetworksByNetworkTokensByAddressData = {
  path: {
    /**
     * token address<br><br><b>Example:</b> 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2
     */
    address: string
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> top_pools<br><b>Example:</b> top_pools
     */
    include?: string
  }
}

export type GetNetworksByNetworkTokensByAddressResponse = {
  data?: token
}

export type GetNetworksByNetworkTokensByAddressError = errors_object

export type GetNetworksByNetworkTokensMultiByAddressesData = {
  path: {
    /**
     * comma-separated list of token addresses (up to 30 addresses)<br>addresses not found in the GeckoTerminal database will be ignored<br><br> **Note:** top_pools for this endpoint returns only the first top pool for each token<br><br><b>Example:</b> 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2,0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48
     */
    addresses: string
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> top_pools<br><b>Example:</b> top_pools
     */
    include?: string
  }
}

export type GetNetworksByNetworkTokensMultiByAddressesResponse = {
  data?: Array<token>
  included?: unknown[]
}

export type GetNetworksByNetworkTokensMultiByAddressesError = errors_object

export type GetNetworksByNetworkTokensByAddressInfoData = {
  path: {
    /**
     * token address<br><br><b>Example:</b> 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2
     */
    address: string
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
}

export type GetNetworksByNetworkTokensByAddressInfoResponse = {
  data?: token_info
}

export type GetNetworksByNetworkTokensByAddressInfoError = errors_object

export type GetNetworksByNetworkPoolsByPoolAddressInfoData = {
  path: {
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
    /**
     * pool address<br><br><b>Example:</b> 0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852
     */
    pool_address: string
  }
}

export type GetNetworksByNetworkPoolsByPoolAddressInfoResponse = {
  data?: Array<token_info>
}

export type GetNetworksByNetworkPoolsByPoolAddressInfoError = errors_object

export type GetTokensInfoRecentlyUpdatedData = {
  query?: {
    /**
     * Attributes for related resources to include, which will be returned under the top-level `"included"` key<br><br><b>Available resources:</b> network<br><b>Example:</b> network
     */
    include?: string
    /**
     * filter tokens by provided network<br><br><b>Example:</b> eth
     */
    network?: string
  }
}

export type GetTokensInfoRecentlyUpdatedResponse = {
  data?: Array<token_info>
}

export type GetTokensInfoRecentlyUpdatedError = unknown

export type GetSimpleNetworksByNetworkTokenPriceByAddressesData = {
  path: {
    /**
     * comma-separated list of token addresses (up to 30 addresses)<br>addresses not found in the GeckoTerminal database will be ignored<br><br> **Note:** By using this endpoint, you are leaving to GeckoTerminal's routing to determine the best pool for the price of the token. As liquidity and pool activity changes, you may find that the source for token price can change. If you would like full control over where the price is obtained, pass in the specific pool address using /pool API endpoints instead.<br><br><b>Example:</b> 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2,0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48
     */
    addresses: string
    /**
     * network id from /networks list<br><br><b>Example:</b> eth
     */
    network: string
  }
}

export type GetSimpleNetworksByNetworkTokenPriceByAddressesResponse = {
  data?: Array<simple_token_price>
}

export type GetSimpleNetworksByNetworkTokenPriceByAddressesError = errors_object
