// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client'
import type {
  GetNetworksByNetworkPoolsByPoolAddressOhlcvByTimeframeData,
  GetNetworksByNetworkPoolsByPoolAddressOhlcvByTimeframeResponses,
  GetNetworksByNetworkPoolsByPoolAddressOhlcvByTimeframeErrors,
  GetNetworksByNetworkDexesData,
  GetNetworksByNetworkDexesResponses,
  GetNetworksData,
  GetNetworksResponses,
  GetNetworksTrendingPoolsData,
  GetNetworksTrendingPoolsResponses,
  GetNetworksTrendingPoolsErrors,
  GetNetworksByNetworkTrendingPoolsData,
  GetNetworksByNetworkTrendingPoolsResponses,
  GetNetworksByNetworkTrendingPoolsErrors,
  GetNetworksByNetworkPoolsByAddressData,
  GetNetworksByNetworkPoolsByAddressResponses,
  GetNetworksByNetworkPoolsByAddressErrors,
  GetNetworksByNetworkPoolsMultiByAddressesData,
  GetNetworksByNetworkPoolsMultiByAddressesResponses,
  GetNetworksByNetworkPoolsMultiByAddressesErrors,
  GetNetworksByNetworkPoolsData,
  GetNetworksByNetworkPoolsResponses,
  GetNetworksByNetworkPoolsErrors,
  GetNetworksByNetworkDexesByDexPoolsData,
  GetNetworksByNetworkDexesByDexPoolsResponses,
  GetNetworksByNetworkDexesByDexPoolsErrors,
  GetNetworksByNetworkTokensByTokenAddressPoolsData,
  GetNetworksByNetworkTokensByTokenAddressPoolsResponses,
  GetNetworksByNetworkTokensByTokenAddressPoolsErrors,
  GetNetworksByNetworkNewPoolsData,
  GetNetworksByNetworkNewPoolsResponses,
  GetNetworksByNetworkNewPoolsErrors,
  GetNetworksNewPoolsData,
  GetNetworksNewPoolsResponses,
  GetSearchPoolsData,
  GetSearchPoolsResponses,
  GetNetworksByNetworkPoolsByPoolAddressTradesData,
  GetNetworksByNetworkPoolsByPoolAddressTradesResponses,
  GetNetworksByNetworkPoolsByPoolAddressTradesErrors,
  GetNetworksByNetworkTokensByAddressData,
  GetNetworksByNetworkTokensByAddressResponses,
  GetNetworksByNetworkTokensByAddressErrors,
  GetNetworksByNetworkTokensMultiByAddressesData,
  GetNetworksByNetworkTokensMultiByAddressesResponses,
  GetNetworksByNetworkTokensMultiByAddressesErrors,
  GetNetworksByNetworkTokensByAddressInfoData,
  GetNetworksByNetworkTokensByAddressInfoResponses,
  GetNetworksByNetworkTokensByAddressInfoErrors,
  GetNetworksByNetworkPoolsByPoolAddressInfoData,
  GetNetworksByNetworkPoolsByPoolAddressInfoResponses,
  GetNetworksByNetworkPoolsByPoolAddressInfoErrors,
  GetTokensInfoRecentlyUpdatedData,
  GetTokensInfoRecentlyUpdatedResponses,
  GetSimpleNetworksByNetworkTokenPriceByAddressesData,
  GetSimpleNetworksByNetworkTokenPriceByAddressesResponses,
  GetSimpleNetworksByNetworkTokenPriceByAddressesErrors,
} from './types.gen'
import { client as _heyApiClient } from './client.gen'

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

/**
 * Get OHLCV data of a pool, up to 6 months ago. Empty response if there is no earlier data available.
 */
export const getNetworksByNetworkPoolsByPoolAddressOhlcvByTimeframe = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetNetworksByNetworkPoolsByPoolAddressOhlcvByTimeframeData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkPoolsByPoolAddressOhlcvByTimeframeResponses,
    GetNetworksByNetworkPoolsByPoolAddressOhlcvByTimeframeErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/pools/{pool_address}/ohlcv/{timeframe}',
    ...options,
  })
}

/**
 * Get list of supported dexes on a network
 */
export const getNetworksByNetworkDexes = <ThrowOnError extends boolean = false>(
  options: Options<GetNetworksByNetworkDexesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkDexesResponses,
    unknown,
    ThrowOnError
  >({
    url: '/networks/{network}/dexes',
    ...options,
  })
}

/**
 * Get list of supported networks
 */
export const getNetworks = <ThrowOnError extends boolean = false>(
  options?: Options<GetNetworksData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetNetworksResponses,
    unknown,
    ThrowOnError
  >({
    url: '/networks',
    ...options,
  })
}

/**
 * Get trending pools across all networks
 */
export const getNetworksTrendingPools = <ThrowOnError extends boolean = false>(
  options?: Options<GetNetworksTrendingPoolsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetNetworksTrendingPoolsResponses,
    GetNetworksTrendingPoolsErrors,
    ThrowOnError
  >({
    url: '/networks/trending_pools',
    ...options,
  })
}

/**
 * Get trending pools on a network
 */
export const getNetworksByNetworkTrendingPools = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetNetworksByNetworkTrendingPoolsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkTrendingPoolsResponses,
    GetNetworksByNetworkTrendingPoolsErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/trending_pools',
    ...options,
  })
}

/**
 * Get specific pool on a network
 */
export const getNetworksByNetworkPoolsByAddress = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetNetworksByNetworkPoolsByAddressData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkPoolsByAddressResponses,
    GetNetworksByNetworkPoolsByAddressErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/pools/{address}',
    ...options,
  })
}

/**
 * Get multiple pools on a network
 */
export const getNetworksByNetworkPoolsMultiByAddresses = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetNetworksByNetworkPoolsMultiByAddressesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkPoolsMultiByAddressesResponses,
    GetNetworksByNetworkPoolsMultiByAddressesErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/pools/multi/{addresses}',
    ...options,
  })
}

/**
 * Get top pools on a network
 */
export const getNetworksByNetworkPools = <ThrowOnError extends boolean = false>(
  options: Options<GetNetworksByNetworkPoolsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkPoolsResponses,
    GetNetworksByNetworkPoolsErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/pools',
    ...options,
  })
}

/**
 * Get top pools on a network's dex
 */
export const getNetworksByNetworkDexesByDexPools = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetNetworksByNetworkDexesByDexPoolsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkDexesByDexPoolsResponses,
    GetNetworksByNetworkDexesByDexPoolsErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/dexes/{dex}/pools',
    ...options,
  })
}

/**
 * Get top pools for a token
 * contains special field `token_price_usd` representing price of requested token
 */
export const getNetworksByNetworkTokensByTokenAddressPools = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetNetworksByNetworkTokensByTokenAddressPoolsData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkTokensByTokenAddressPoolsResponses,
    GetNetworksByNetworkTokensByTokenAddressPoolsErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/tokens/{token_address}/pools',
    ...options,
  })
}

/**
 * Get latest pools on a network
 */
export const getNetworksByNetworkNewPools = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetNetworksByNetworkNewPoolsData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkNewPoolsResponses,
    GetNetworksByNetworkNewPoolsErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/new_pools',
    ...options,
  })
}

/**
 * Get latest pools across all networks
 */
export const getNetworksNewPools = <ThrowOnError extends boolean = false>(
  options?: Options<GetNetworksNewPoolsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetNetworksNewPoolsResponses,
    unknown,
    ThrowOnError
  >({
    url: '/networks/new_pools',
    ...options,
  })
}

/**
 * Search for pools on a network
 */
export const getSearchPools = <ThrowOnError extends boolean = false>(
  options?: Options<GetSearchPoolsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetSearchPoolsResponses,
    unknown,
    ThrowOnError
  >({
    url: '/search/pools',
    ...options,
  })
}

/**
 * Get last 300 trades in past 24 hours from a pool
 */
export const getNetworksByNetworkPoolsByPoolAddressTrades = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetNetworksByNetworkPoolsByPoolAddressTradesData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkPoolsByPoolAddressTradesResponses,
    GetNetworksByNetworkPoolsByPoolAddressTradesErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/pools/{pool_address}/trades',
    ...options,
  })
}

/**
 * Get specific token on a network
 */
export const getNetworksByNetworkTokensByAddress = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetNetworksByNetworkTokensByAddressData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkTokensByAddressResponses,
    GetNetworksByNetworkTokensByAddressErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/tokens/{address}',
    ...options,
  })
}

/**
 * Get multiple tokens on a network
 */
export const getNetworksByNetworkTokensMultiByAddresses = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetNetworksByNetworkTokensMultiByAddressesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkTokensMultiByAddressesResponses,
    GetNetworksByNetworkTokensMultiByAddressesErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/tokens/multi/{addresses}',
    ...options,
  })
}

/**
 * Get specific token info on a network
 */
export const getNetworksByNetworkTokensByAddressInfo = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetNetworksByNetworkTokensByAddressInfoData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkTokensByAddressInfoResponses,
    GetNetworksByNetworkTokensByAddressInfoErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/tokens/{address}/info',
    ...options,
  })
}

/**
 * Get pool tokens info on a network
 */
export const getNetworksByNetworkPoolsByPoolAddressInfo = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetNetworksByNetworkPoolsByPoolAddressInfoData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetNetworksByNetworkPoolsByPoolAddressInfoResponses,
    GetNetworksByNetworkPoolsByPoolAddressInfoErrors,
    ThrowOnError
  >({
    url: '/networks/{network}/pools/{pool_address}/info',
    ...options,
  })
}

/**
 * Get most recently updated 100 tokens info across all networks
 */
export const getTokensInfoRecentlyUpdated = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetTokensInfoRecentlyUpdatedData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetTokensInfoRecentlyUpdatedResponses,
    unknown,
    ThrowOnError
  >({
    url: '/tokens/info_recently_updated',
    ...options,
  })
}

/**
 * Get current USD prices of multiple tokens on a network
 */
export const getSimpleNetworksByNetworkTokenPriceByAddresses = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetSimpleNetworksByNetworkTokenPriceByAddressesData,
    ThrowOnError
  >
) => {
  return (options.client ?? _heyApiClient).get<
    GetSimpleNetworksByNetworkTokenPriceByAddressesResponses,
    GetSimpleNetworksByNetworkTokenPriceByAddressesErrors,
    ThrowOnError
  >({
    url: '/simple/networks/{network}/token_price/{addresses}',
    ...options,
  })
}
